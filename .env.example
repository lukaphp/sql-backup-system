# Database Configuration
DATABASE_URL=mssql+pyodbc://sa:YourStrongPassword123!@db:1433/sql_backup_system?driver=ODBC+Driver+18+for+SQL+Server
SQL_SERVER_PASSWORD=YourStrongPassword123!

# Security
SECRET_KEY=your-secret-key-here-make-it-very-long-and-random
ACCESS_TOKEN_EXPIRE_MINUTES=11520  # 8 days

# Cloud Storage (Dropbox)
DROPBOX_ACCESS_TOKEN=your-dropbox-access-token

# SMTP Configuration
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASSWORD=your-app-specific-password

# Backup Settings
BACKUP_RETENTION_DAYS=30
MAX_BACKUP_SIZE_MB=1000

# Frontend Configuration
REACT_APP_API_URL=http://localhost:8000

# Docker Compose Settings
COMPOSE_PROJECT_NAME=sql-backup-system

# Development Settings
DEBUG=True
CORS_ORIGINS=http://localhost:3000

# Monitoring Settings
LOG_LEVEL=INFO
ENABLE_SCHEDULER=True

# Optional: Sentry Error Tracking
# SENTRY_DSN=your-sentry-dsn

# Optional: Redis Cache (for future use)
# REDIS_URL=redis://redis:6379/0

# Note: In production, make sure to:
# 1. Use strong, unique passwords
# 2. Enable HTTPS and set secure cookies
# 3. Configure proper CORS origins
# 4. Use production-grade SMTP server
# 5. Set up proper backup retention policies
# 6. Configure monitoring and alerts
